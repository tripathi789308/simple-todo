version: '3.8'

services:
  db:
    container_name: todo_pg_container
    image: postgres:latest
    restart: always
    ports:
      - "${DATABASE_PORT}:${DATABASE_PORT}"
    env_file:
      - .env
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck: 
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    container_name: pgadmin_todo_container
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: user@simple-todo.com
      PGADMIN_DEFAULT_PASSWORD: user
    ports:
      - '5000:80'

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
      args:
        POSTGRES_USER: ${POSTGRES_USER}
        POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
        POSTGRES_DB: ${POSTGRES_DB}
        DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@host.docker.internal:${DATABASE_PORT}/${POSTGRES_DB}?schema=public"
        PORT: ${BACKEND_PORT}
    container_name: todo-system-backend
    environment:
      DATABASE_URL: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@host.docker.internal:${DATABASE_PORT}/${POSTGRES_DB}?schema=public"
      PORT: ${BACKEND_PORT}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    env_file:
      - .env
    ports:
      - "${BACKEND_PORT}:${BACKEND_PORT}"
    depends_on:
      db:
        condition: service_healthy 
    volumes:
      - ./backend:/app
    command: npm run start

  frontend:
    build: ./frontend
    ports:
      - "${FRONTEND_PORT}:${FRONTEND_PORT}"
    env_file:
      - .env
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
    command: yarn start

volumes:
  pg_data: